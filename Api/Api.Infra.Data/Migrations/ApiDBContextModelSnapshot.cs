// <auto-generated />
using System;
using Api.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Infra.Data.Migrations
{
    [DbContext(typeof(ApiDBContext))]
    partial class ApiDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            //modelBuilder.Entity("Api.Domain.Entities.BaseEntity", b =>
            //    {
            //        b.Property<int>("Id")
            //            .ValueGeneratedOnAdd()
            //            .HasColumnType("int")
            //            .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            //        b.Property<DateTime?>("CreateDate")
            //            .HasColumnType("datetime2");

            //        b.Property<string>("CreateUser")
            //            .HasColumnType("nvarchar(max)");

            //        b.Property<DateTime?>("DeleteDate")
            //            .HasColumnType("datetime2");

            //        b.Property<string>("DeleteUser")
            //            .HasColumnType("nvarchar(max)");

            //        b.Property<bool>("Deleted")
            //            .HasColumnType("bit");

            //        b.Property<DateTime?>("ModifyDate")
            //            .HasColumnType("datetime2");

            //        b.Property<string>("ModifyUser")
            //            .HasColumnType("nvarchar(max)");

            //        b.HasKey("Id");

            //        b.ToTable("BaseEntity");
            //    });

            modelBuilder.Entity("Api.Domain.Entities.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("BuildingKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BuildingName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("ScheduleKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ScheduleVersion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingKey")
                        .IsUnique();

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("Api.Domain.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ClassKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("ScheduleKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ScheduleVersion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassKey")
                        .IsUnique();

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Api.Domain.Entities.ClassShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ClassKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassShiftKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("ShiftKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClassShiftKey")
                        .IsUnique();

                    b.HasIndex("ShiftKey");

                    b.HasIndex("ClassKey", "ShiftKey")
                        .IsUnique();

                    b.ToTable("ClassShifts");
                });

            modelBuilder.Entity("Api.Domain.Entities.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ConfigurationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ConfigurationType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationKey")
                        .IsUnique();

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("Api.Domain.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CourseKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CourseType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("ScheduleKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ScheduleVersion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseKey")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Api.Domain.Entities.CourseUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CourseKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseUnitKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("UnitKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseUnitKey")
                        .IsUnique();

                    b.HasIndex("UnitKey");

                    b.HasIndex("CourseKey", "UnitKey")
                        .IsUnique();

                    b.ToTable("CourseUnits");
                });

            modelBuilder.Entity("Api.Domain.Entities.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AvailableManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("AvailableRequest")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PropertyDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("PropertyKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PropertyName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("PropertyStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PropertyKey")
                        .IsUnique();

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Api.Domain.Entities.QualitySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvarageGapBetweenSessionsByShift")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("ScheduleKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ScheduleVersion")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TimeExecution")
                        .HasColumnType("time");

                    b.Property<int>("TotalRoomChangeBetweenSessions")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeBetweenSessionsAfterWork")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeBetweenSessionsDegrees")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeBetweenSessionsMasters")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeBetweenSessionsWork")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeInSessions")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeInSessionsAfterWork")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeInSessionsDegrees")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeInSessionsMasters")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeInSessionsWork")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeInShifts")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeInShiftsAfterWork")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeInShiftsDegrees")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeInShiftsMasters")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomChangeInShiftsWork")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomsWithoutSession")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomsWithoutSessionAfterWork")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomsWithoutSessionDegrees")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomsWithoutSessionMasters")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomsWithoutSessionWork")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleKey")
                        .IsUnique();

                    b.ToTable("QualitySchedules");
                });

            modelBuilder.Entity("Api.Domain.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("BuildingKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("ExamCapacity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("NormalCapacity")
                        .HasColumnType("int");

                    b.Property<Guid>("RoomKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoomName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("ScheduleKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ScheduleVersion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingKey");

                    b.HasIndex("RoomKey")
                        .IsUnique();

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Api.Domain.Entities.RoomProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("PropertyKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomPropertyKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PropertyKey");

                    b.HasIndex("RoomPropertyKey")
                        .IsUnique();

                    b.HasIndex("RoomKey", "PropertyKey")
                        .IsUnique();

                    b.ToTable("RoomProperties");
                });

            modelBuilder.Entity("Api.Domain.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("PropertyKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ScheduleKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ScheduleVersion")
                        .HasColumnType("int");

                    b.Property<Guid>("SessionKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShiftKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PropertyKey");

                    b.HasIndex("SessionKey")
                        .IsUnique();

                    b.HasIndex("ShiftKey");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Api.Domain.Entities.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EnrolledStudents")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("ScheduleKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ScheduleVersion")
                        .HasColumnType("int");

                    b.Property<Guid>("ShiftKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShiftName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ShiftType")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ShiftKey")
                        .IsUnique();

                    b.HasIndex("UnitKey");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Api.Domain.Entities.Slot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("RoomKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ScheduleKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ScheduleVersion")
                        .HasColumnType("int");

                    b.Property<Guid>("SessionKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SlotKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomKey");

                    b.HasIndex("SessionKey");

                    b.HasIndex("SlotKey")
                        .IsUnique();

                    b.ToTable("Slots");
                });

            modelBuilder.Entity("Api.Domain.Entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("ScheduleKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ScheduleVersion")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("UnitKey")
                        .IsUnique();

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Api.Domain.Entities.ClassShift", b =>
                {
                    b.HasOne("Api.Domain.Entities.Class", "Class")
                        .WithMany("ClassShifts")
                        .HasForeignKey("ClassKey")
                        .HasPrincipalKey("ClassKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Api.Domain.Entities.Shift", "Shift")
                        .WithMany("ShiftClasses")
                        .HasForeignKey("ShiftKey")
                        .HasPrincipalKey("ShiftKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Api.Domain.Entities.CourseUnit", b =>
                {
                    b.HasOne("Api.Domain.Entities.Course", "Course")
                        .WithMany("CourseUnits")
                        .HasForeignKey("CourseKey")
                        .HasPrincipalKey("CourseKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Api.Domain.Entities.Unit", "Unit")
                        .WithMany("UnitCourses")
                        .HasForeignKey("UnitKey")
                        .HasPrincipalKey("UnitKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Api.Domain.Entities.Room", b =>
                {
                    b.HasOne("Api.Domain.Entities.Building", "Building")
                        .WithMany("Rooms")
                        .HasForeignKey("BuildingKey")
                        .HasPrincipalKey("BuildingKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("Api.Domain.Entities.RoomProperty", b =>
                {
                    b.HasOne("Api.Domain.Entities.Property", "Property")
                        .WithMany("PropertyRooms")
                        .HasForeignKey("PropertyKey")
                        .HasPrincipalKey("PropertyKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Api.Domain.Entities.Room", "Room")
                        .WithMany("RoomProperties")
                        .HasForeignKey("RoomKey")
                        .HasPrincipalKey("RoomKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Property");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Api.Domain.Entities.Session", b =>
                {
                    b.HasOne("Api.Domain.Entities.Property", "Property")
                        .WithMany("Sessions")
                        .HasForeignKey("PropertyKey")
                        .HasPrincipalKey("PropertyKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Api.Domain.Entities.Shift", "Shift")
                        .WithMany("Sessions")
                        .HasForeignKey("ShiftKey")
                        .HasPrincipalKey("ShiftKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Property");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Api.Domain.Entities.Shift", b =>
                {
                    b.HasOne("Api.Domain.Entities.Unit", "Unit")
                        .WithMany("Shifts")
                        .HasForeignKey("UnitKey")
                        .HasPrincipalKey("UnitKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Api.Domain.Entities.Slot", b =>
                {
                    b.HasOne("Api.Domain.Entities.Room", "Room")
                        .WithMany("Slots")
                        .HasForeignKey("RoomKey")
                        .HasPrincipalKey("RoomKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Api.Domain.Entities.Session", "Session")
                        .WithMany("Slots")
                        .HasForeignKey("SessionKey")
                        .HasPrincipalKey("SessionKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("Api.Domain.Entities.Building", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Api.Domain.Entities.Class", b =>
                {
                    b.Navigation("ClassShifts");
                });

            modelBuilder.Entity("Api.Domain.Entities.Course", b =>
                {
                    b.Navigation("CourseUnits");
                });

            modelBuilder.Entity("Api.Domain.Entities.Property", b =>
                {
                    b.Navigation("PropertyRooms");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("Api.Domain.Entities.Room", b =>
                {
                    b.Navigation("RoomProperties");

                    b.Navigation("Slots");
                });

            modelBuilder.Entity("Api.Domain.Entities.Session", b =>
                {
                    b.Navigation("Slots");
                });

            modelBuilder.Entity("Api.Domain.Entities.Shift", b =>
                {
                    b.Navigation("Sessions");

                    b.Navigation("ShiftClasses");
                });

            modelBuilder.Entity("Api.Domain.Entities.Unit", b =>
                {
                    b.Navigation("Shifts");

                    b.Navigation("UnitCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
