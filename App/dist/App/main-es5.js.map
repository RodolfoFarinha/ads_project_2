{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/calendar/calendar.component.ts","webpack:///src/app/components/calendar/calendar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useFactory","declarations","providers","bootstrap","$event","event","colors","red","primary","secondary","blue","yellow","CalendarComponent","modal","view","Month","CalendarView","viewDate","Date","actions","label","a11yLabel","onClick","handleEvent","events","filter","iEvent","refresh","start","end","color","allDay","resizable","beforeStart","afterEnd","draggable","activeDayIsOpen","date","length","newStart","newEnd","map","action","modalData","open","modalContent","size","eventToDelete","closeOpenMonthViewDay","setView","changeDetection","OnPush","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CalendarComponent } from './components/calendar/calendar.component';\n\nconst routes: Routes = [\n  { path: 'calendar', component: CalendarComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'App';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CalendarComponent } from './components/calendar/calendar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CalendarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CalendarModule.forRoot({ provide: DateAdapter, useFactory: adapterFactory }),\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, ChangeDetectionStrategy, ViewChild, TemplateRef} from '@angular/core';\nimport { startOfDay, endOfDay, subDays, addDays, endOfMonth, isSameDay, isSameMonth, addHours} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CalendarEvent, CalendarEventAction, CalendarEventTimesChangedEvent, CalendarView } from 'angular-calendar';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3',\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF',\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA',\n  },\n};\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['calendar.component.css'],\n  templateUrl: 'calendar.component.html',\n})\nexport class CalendarComponent {\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\n\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  actions: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fas fa-fw fa-pencil-alt\"></i>',\n      a11yLabel: 'Edit',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      },\n    },\n    {\n      label: '<i class=\"fas fa-fw fa-trash-alt\"></i>',\n      a11yLabel: 'Delete',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.events = this.events.filter((iEvent) => iEvent !== event);\n        this.handleEvent('Deleted', event);\n      },\n    },\n  ];\n\n  refresh: Subject<any> = new Subject();\n\n  events: CalendarEvent[] = [\n    {\n      start: subDays(startOfDay(new Date()), 1),\n      end: addDays(new Date(), 1),\n      title: 'A 3 day event',\n      color: colors.red,\n      actions: this.actions,\n      allDay: true,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true,\n      },\n      draggable: true,\n    },\n    {\n      start: startOfDay(new Date()),\n      title: 'An event with no end date',\n      color: colors.yellow,\n      actions: this.actions,\n    },\n    {\n      start: subDays(endOfMonth(new Date()), 3),\n      end: addDays(endOfMonth(new Date()), 3),\n      title: 'A long event that spans 2 months',\n      color: colors.blue,\n      allDay: true,\n    },\n    {\n      start: addHours(startOfDay(new Date()), 2),\n      end: addHours(new Date(), 2),\n      title: 'A draggable and resizable event',\n      color: colors.yellow,\n      actions: this.actions,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true,\n      },\n      draggable: true,\n    },\n  ];\n\n  activeDayIsOpen: boolean = true;\n\n  constructor(private modal: NgbModal) { }\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n      }\n      this.viewDate = date;\n    }\n  }\n\n  eventTimesChanged({event, newStart, newEnd}: CalendarEventTimesChangedEvent): void {\n    this.events = this.events.map((iEvent) => {\n      if (iEvent === event) {\n        return {\n          ...event,\n          start: newStart,\n          end: newEnd,\n        };\n      }\n      return iEvent;\n    });\n    this.handleEvent('Dropped or resized', event);\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    this.modalData = { event, action };\n    this.modal.open(this.modalContent, { size: 'lg' });\n  }\n\n  addEvent(): void {\n    this.events = [\n      ...this.events,\n      {\n        title: 'New event',\n        start: startOfDay(new Date()),\n        end: endOfDay(new Date()),\n        color: colors.red,\n        draggable: true,\n        resizable: {\n          beforeStart: true,\n          afterEnd: true,\n        },\n      },\n    ];\n  }\n\n  deleteEvent(eventToDelete: CalendarEvent) {\n    this.events = this.events.filter((event) => event !== eventToDelete);\n  }\n\n  setView(view: CalendarView) {\n    this.view = view;\n  }\n\n  closeOpenMonthViewDay() {\n    this.activeDayIsOpen = false;\n  }\n}\n","<div style=\"width: 100%; text-align: center;\">\n  <div class=\"calender-container\">\n    <div class=\"row text-center\">\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div class=\"btn btn-primary\" mwlCalendarPreviousView [view]=\"view\" [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"closeOpenMonthViewDay()\">\n            Previous\n          </div>\n          <div class=\"btn btn-outline-secondary\" mwlCalendarToday [(viewDate)]=\"viewDate\">\n            Today\n          </div>\n          <div class=\"btn btn-primary\" mwlCalendarNextView [view]=\"view\" [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"closeOpenMonthViewDay()\">\n            Next\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Month)\" [class.active]=\"view === CalendarView.Month\">\n            Month\n          </div>\n          <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Week)\" [class.active]=\"view === CalendarView.Week\">\n            Week\n          </div>\n          <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Day)\" [class.active]=\"view === CalendarView.Day\">\n            Day\n          </div>\n        </div>\n      </div>\n    </div>\n    <br />\n    <div [ngSwitch]=\"view\">\n      <mwl-calendar-month-view *ngSwitchCase=\"CalendarView.Month\" [viewDate]=\"viewDate\" [events]=\"events\"\n        [refresh]=\"refresh\" [activeDayIsOpen]=\"activeDayIsOpen\" (dayClicked)=\"dayClicked($event.day)\"\n        (eventClicked)=\"handleEvent('Clicked', $event.event)\" (eventTimesChanged)=\"eventTimesChanged($event)\">\n      </mwl-calendar-month-view>\n      <mwl-calendar-week-view *ngSwitchCase=\"CalendarView.Week\" [viewDate]=\"viewDate\" [events]=\"events\"\n        [refresh]=\"refresh\" (eventClicked)=\"handleEvent('Clicked', $event.event)\"\n        (eventTimesChanged)=\"eventTimesChanged($event)\">\n      </mwl-calendar-week-view>\n      <mwl-calendar-day-view *ngSwitchCase=\"CalendarView.Day\" [viewDate]=\"viewDate\" [events]=\"events\" [refresh]=\"refresh\"\n        (eventClicked)=\"handleEvent('Clicked', $event.event)\" (eventTimesChanged)=\"eventTimesChanged($event)\">\n      </mwl-calendar-day-view>\n    </div>\n\n    <!-- Everything you see below is just for the demo, you don't need to include it in your app -->\n\n    <!-- <br /><br /><br />\n\n  <h3>\n    Edit events\n    <button class=\"btn btn-primary float-right\" (click)=\"addEvent()\">\n      Add new\n    </button>\n    <div class=\"clearfix\"></div>\n  </h3>\n\n  <div class=\"table-responsive\">\n    <table class=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Primary color</th>\n          <th>Secondary color</th>\n          <th>Starts at</th>\n          <th>Ends at</th>\n          <th>Remove</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr *ngFor=\"let event of events\">\n          <td>\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"event.title\" (keyup)=\"refresh.next()\" />\n          </td>\n          <td>\n            <input type=\"color\" [(ngModel)]=\"event.color.primary\" (change)=\"refresh.next()\" />\n          </td>\n          <td>\n            <input type=\"color\" [(ngModel)]=\"event.color.secondary\" (change)=\"refresh.next()\" />\n          </td>\n          <td>\n            <input class=\"form-control\" type=\"text\" mwlFlatpickr [(ngModel)]=\"event.start\"\n              (ngModelChange)=\"refresh.next()\" [altInput]=\"true\" [convertModelValue]=\"true\" [enableTime]=\"true\"\n              dateFormat=\"Y-m-dTH:i\" altFormat=\"F j, Y H:i\" placeholder=\"Not set\" />\n          </td>\n          <td>\n            <input class=\"form-control\" type=\"text\" mwlFlatpickr [(ngModel)]=\"event.end\" (ngModelChange)=\"refresh.next()\"\n              [altInput]=\"true\" [convertModelValue]=\"true\" [enableTime]=\"true\" dateFormat=\"Y-m-dTH:i\"\n              altFormat=\"F j, Y H:i\" placeholder=\"Not set\" />\n          </td>\n          <td>\n            <button class=\"btn btn-danger\" (click)=\"deleteEvent(event)\">\n              Delete\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <ng-template #modalContent let-close=\"close\">\n    <div class=\"modal-header\">\n      <h5 class=\"modal-title\">Event action occurred</h5>\n      <button type=\"button\" class=\"close\" (click)=\"close()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div>\n        Action:\n        <pre>{{ modalData?.action }}</pre>\n      </div>\n      <div>\n        Event:\n        <pre>{{ modalData?.event | json }}</pre>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"close()\">\n        OK\n      </button>\n    </div>\n  </ng-template> -->\n\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}